import Head from 'next/head'
import { useEffect, useState } from 'react';
import { addName } from '@/utils/argonautes';
import {
query,
orderBy,
onSnapshot,
collection
} from 'firebase/firestore'
import { db } from '@/firebase';
import { CardName } from '@/components/CardName';

export default function Home() {
  const [newName, setNewName] = useState('')
  const [names, setNames] = useState([])
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState('')
  const regex = new RegExp(/^[A-Za-z\s]*$/, 'i')

  useEffect(() => {
    setIsLoading(true)
    const res = query(collection(db, 'argonautes'), orderBy('createdAt', 'desc'));
    onSnapshot(res, (querySnapchot) => {
      let nameList = [];
      querySnapchot.docs.forEach((doc) => {
        nameList.push({ id: doc.id, ...doc.data() })
      })
      setNames(nameList);
      setIsLoading(false)
    });
  }, [])

  const handleSubmit = (evt) => {
    evt.preventDefault()

    if (!regex.test(newName) || newName.trim() === '') {
      setError('Veuillez rentrer un nom conforme. (seules les lettres sont acceptées)')
      return
    }

    setNewName('')
    addName(newName)
    setError('')
  }


  return (
    <>
      <Head>
        <title>Tech Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/png" href="/logo.png" />
      </Head>

      <header>
        <h1>
          <img src="https://www.wildcodeschool.com/assets/logo_main-e4f3f744c8e717f1b7df3858dce55a86c63d4766d5d9a7f454250145f097c2fe.png" alt="Wild Code School logo" />
          Les Argonautes
        </h1>
      </header>

      <main>
        
        <h2>Ajouter un(e) Argonaute</h2>
        <form onSubmit={handleSubmit} className="new-member-form">
          <label htmlFor="name">Nom de l&apos;Argonaute</label>
          <div className="input-form">
            <input
              id="name"
              name="name"
              type="text"
              placeholder="Charalampos"
              value={newName}
              onChange={evt => setNewName(evt.target.value)}
            />
            <button type="submit">Envoyer</button>
          </div>
          {
            error && <p className='error-message'>{error}</p>
          }
        </form>
        <h2>Membres de l'équipage</h2>
        <section className="member-list">
          {
            !isLoading ? (
                names.map((name, i) => (
                <CardName key={i} name={name} regex={regex} />
              ))
             ) : (
              <span className="loader"></span>
             )
          }
        </section>
      </main>

      <footer>
        <p>Réalisé par Jason en Anthestérion de l'an 515 avant JC</p>
      </footer>
    </>
  )
}
